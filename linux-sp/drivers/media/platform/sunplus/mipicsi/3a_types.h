#ifndef __3A_TYPES_H__
#define __3A_TYPES_H__

// Define struct
struct aaa_var {
	u16 sensor_gain_addr;
	u16 sensor_frame_len_addr;
	u16 sensor_line_total_addr;
	u16 sensor_exp_line_addr;
	u32 sensor_pclk;
	u32 ctExposureTimeAbsoluteCur;
	u8 AeTest;
	u16 AeExp;
	u16 AeExpGet;
	u8 AeExpLineMode;
	u8 AePreExpLineMode;
	u16 AeLineModeExpLineCount;
	u16 SensorLineCountOut;
	u16 AeCurExpLine;
	u16 SensorMinFrameLen;
	u16 AeGain;
	u16 AeGainGet;
	u32 AeEvConst;
	u32 AeCurEv;
	u16 pAeGainTbl[256];
	u16 pAeExpTbl[256];
	u8 AeTblCntVal;
	u16* AeExpTableSfAddr;
	u16* AeGainTableSfAddr;
	u16 AeExpLineCount120;
	u16 SensorExpIn;
	u16 AwbCurColTemp;
	u16 AwbColTemp;
	u16 AwbBGainReg;
	u16 AwbRGainReg;
	u16 AwbGGainReg;
	u16 AwbRawRGain;
	u16 AwbRawGGain;
	u16 AwbRawBGain;
	u16 AwbRGainTarget;
	u16 AwbGGainTarget;
	u16 AwbBGainTarget;
	u16 AwbPreRTarget;
	u16 AwbDeadZone;
	u16 AwbPreBTarget;
	u32 AwbSumCount;
	u32 AwbSumR;
	u32 AwbSumG;
	u32 AwbSumB;
	u32 AeImgSize;
	u8 AeDarkMode;
	u8 AeDeadZone;
	u16 AeDeadLeafWinSize;
	u8 AeDarkThresh0;
	short AeIndex;
	short AeIndexPrev;
	short AeIndexGet;
	u8 AeIndexMax;
	u8 AaaFreq;
	u8 AeIndexMin;
	u8 AeIndexMax60;
	u8 AeIndexMax50;
	u8 AeIndexMin60;
	u8 AeIndexMin50;
	u8 aaaFlag;
	u8 aaaCount;
	u8 AwbMinGain;
	u8 AwbFirstInit;
	u8 AwbMode;
	u8 AwbRWidth;
	u8 AwbBWidth;
	u32 AwbMinGrayDetCnt;
	u16 AwbCheckBlkCnt;
	const u8* pAwbRRef;
	const u8* pAwbBRef;
	u8 AwbCmAdjCnt;
	const u16* pAwbAdjCmColTemp;
	const short* pAwbAdjCmColMat;
	u8 AwbLensAdjCnt;
	const short* pAwbAdjLensColTemp;
	const short* pAwbAdjLensRVal;
	const short* pAwbAdjLensBVal;
	short AeAdjYTarget;
	u16 AeYTarget;
	u8 AwbBTargetMin;
	u8 AwbBTargetMax;
	u8 AwbRTargetMin;
	u8 AwbRTargetMax;
	u8 AwbGTargetMin;
	u8 AwbGTargetMax;
	short AeYLayer;
	u16 puBacklightCompensationCur;
	u16 puBacklightCompensationDef;
	u8* pAeNormWeight;
	u8 AeStable;
	u8 AeStill;
};

typedef struct aaa_var aaa_var_t;

#endif /* __3A_TYPES_H__ */

#!/bin/sh

set -e

MACH=sp7021
BOARD=
board=
TOPDIR=`pwd`

TOOLCHAIN=gcc-linaro-7.3.1-2018.05-x86_64_arm-linux-gnueabihf
CROSS_COMPILE=${TOPDIR}/toolchains/${TOOLCHAIN}/bin

list_boards() {
	(cd sp-pack/${MACH}/configs ; ls -1d BPI* )
}

# keep the output `sh` friendly
# i.e., no spaces around the '='
generate_board_mk() {
	
	cat <<-EOT
	BOARD=$BOARD
	MACH=$MACH
	COMPILE_TOOL=$CROSS_COMPILE
	UBOOT_CONFIG=pentagram_sp7021_emmc_defconfig
	KERNEL_CONFIG=pentagram_sp7021_achip_emu_${board}_defconfig
	EOT

}


generate_board_envsh() {
	
	cat <<-EOT
	export ARCH=arm
	export MACH=$MACH
	export BOARD=$BOARD
	export UBOOT_CONFIG=pentagram_sp7021_emmc_defconfig
	export KERNEL_CONFIG=pentagram_sp7021_achip_emu_${board}_defconfig
	export KERNEL_MODULES=4.19.37-${BOARD%-*}-Kernel
	export KERNEL_HEADERS=linux-headers-4.19.37-${BOARD%-*}-Kernel
	export TOPDIR=$TOPDIR
	EOT

}

usage() {
	cat <<-EOT >&2
	Usage: $0 <board>

	supported boards:
	EOT
	list_boards
}

if [ $# -eq 0 ]; then
	usage
	exit 1
fi

BOARD=$1
board=$(echo ${BOARD%-*} | tr '[A-Z]' '[a-z]')

generate_board_envsh "$1" > env.sh

out=chosen_board.mk
if generate_board_mk "$1" > $out~; then
	mv $out~ $out
	echo "$1 configured. Now run \`make\`"
else
	rm $out~
	exit 1
fi
